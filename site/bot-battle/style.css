// game.js
// Core game engine with difficulties, working shop, and black background

const canvas = document.getElementById('gameCanvas');
const ctx = canvas.getContext('2d');
canvas.style.backgroundColor = 'black';

let player = {
  x: canvas.width / 2,
  y: canvas.height - 50,
  health: 100,
  ammo: Infinity,
  score: 0,
  weapon: 'gun'
};

let bullets = [], bots = [], cooldown = 0, difficulty = 'easy';
let keys = {};

if (localStorage.getItem('score')) player.score = parseInt(localStorage.getItem('score'));

document.addEventListener('keydown', e => keys[e.key.toLowerCase()] = true);
document.addEventListener('keyup', e => keys[e.key.toLowerCase()] = false);
document.addEventListener('mousedown', shoot);
canvas.addEventListener('mousemove', e => {
  player.mouseX = e.offsetX;
  player.mouseY = e.offsetY;
});

function shoot() {
  if (player.ammo <= 0) return;
  const angle = Math.atan2(player.mouseY - player.y, player.mouseX - player.x);
  bullets.push({ x: player.x, y: player.y, dx: Math.cos(angle) * 5, dy: Math.sin(angle) * 5 });
  if (player.ammo !== Infinity) player.ammo--;
  updateUI();
}

function spawnBot() {
  let bot = {
    x: Math.random() * canvas.width,
    y: 0,
    health: 100
  };
  bots.push(bot);
}

function gameLoop() {
  ctx.clearRect(0, 0, canvas.width, canvas.height);

  if (keys['w'] || keys['arrowup']) player.y -= 5;
  if (keys['s'] || keys['arrowdown']) player.y += 5;
  if (keys['a'] || keys['arrowleft']) player.x -= 5;
  if (keys['d'] || keys['arrowright']) player.x += 5;
  player.x = Math.max(15, Math.min(canvas.width - 15, player.x));
  player.y = Math.max(15, Math.min(canvas.height - 15, player.y));

  bullets.forEach((b, i) => {
    b.x += b.dx;
    b.y += b.dy;
    ctx.fillStyle = 'white';
    ctx.beginPath();
    ctx.arc(b.x, b.y, 5, 0, Math.PI * 2);
    ctx.fill();
    bots.forEach((bot, j) => {
      if (Math.abs(bot.x - b.x) < 20 && Math.abs(bot.y - b.y) < 20) {
        bot.health -= 25;
        if (bot.health <= 0) {
          bots.splice(j, 1);
          player.score++;
          localStorage.setItem('score', player.score);
          updateUI();
        }
        bullets.splice(i, 1);
      }
    });
  });

  bots.forEach((bot, i) => {
    let dx = player.x - bot.x;
    let dy = player.y - bot.y;
    let dist = Math.sqrt(dx * dx + dy * dy);
    if (dist > 1) {
      bot.x += dx / dist;
      bot.y += dy / dist;
    }
    ctx.fillStyle = 'red';
    ctx.fillRect(bot.x, bot.y, 30, 30);

    if (Math.abs(bot.x - player.x) < 20 && Math.abs(bot.y - player.y) < 20) {
      player.health -= 1;
      if (player.health <= 0) {
        bots = [];
        player.health = 100;
        updateUI();
      }
    }
  });

  ctx.fillStyle = 'lime';
  ctx.fillRect(player.x - 15, player.y - 15, 30, 30);

  requestAnimationFrame(gameLoop);
}

function toggleShop() {
  document.getElementById('shop').classList.toggle('hidden');
}

function buy(item) {
  if (item === 'gun' && player.score >= 5) {
    player.weapon = 'gun';
    player.score -= 5;
  }
  localStorage.setItem('score', player.score);
  updateUI();
}

function setDifficulty(diff) {
  difficulty = diff;
  bots = [];
  if (difficulty === 'easy') player.ammo = Infinity;
  else if (difficulty === 'medium') player.ammo = 250;
  else if (difficulty === 'hard') player.ammo = 100;
  else if (difficulty === 'veryHard') player.ammo = 50;
  else if (difficulty === 'impossible') player.ammo = 25;
  updateUI();
}

function updateUI() {
  document.getElementById('score').textContent = 'Score: ' + player.score;
  document.getElementById('health').textContent = 'Health: ' + player.health;
  document.getElementById('ammo').textContent = 'Ammo: ' + (player.ammo === Infinity ? 'âˆž' : player.ammo);
}

setInterval(spawnBot, 1500);
gameLoop();
